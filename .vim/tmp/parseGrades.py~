:x
# them out.
# Zach Kirsch | 13 May 2016
# Dependencies:
#   Selenium (pip install selenium)
#   PhantomJS (http://phantomjs.org/download.html)
# Usage:
#   python parseGrades.py

################################################################################
################################################################################

from selenium import webdriver
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.by   import By
from selenium.webdriver.support.ui  import WebDriverWait
from selenium.webdriver.support     import expected_conditions as EC
from selenium.common.exceptions     import TimeoutException
import datetime
import time
import sys
import os.path

################################################################################
################################################################################

## Constants

DELAY     = 10 # will wait this many seconds before timing out
LOGIN_URL = ("https://sis.uit.tufts.edu/psp/paprd/EMPLOYEE/EMPL/h/"
             "?tab=PAPP_GUEST")

SIS_URL = ("https://sis.uit.tufts.edu/psp/paprd/EMPLOYEE/EMPL/h/"
           "?tab = DEFAULT&tm = "
           + datetime.datetime.now().strftime('%Y%m%d-%H%m') +
           "#1")

SIS_USERID = "zkirsc01"

PHANTOMJS_BINARY = r'/usr/local/bin/phantomjs'

PRINT_UNGRADED  = True # whether to print the courses that aren't yet graded

################################################################################
################################################################################

## Fill out forms and login to site
def login(driver):
    username = driver.find_element_by_name('userid')
    password = driver.find_element_by_name('pwd')
    username.send_keys(USER)
    password.send_keys(PASS)
    password.send_keys(Keys.RETURN)

    # see if it worked
    try:
        WebDriverWait(driver, DELAY).until(EC.presence_of_element_located(
                                              (By.CLASS_NAME,'tfp_mp_slide')))
    except TimeoutException:
        print "Error logging in"
        sys.exit(1)


## given the information about a course, this prints the course/grade to stdout.
## if PRINT_UNGRADED is set to true, this prints the courses that haven't yet
## been graded as well.
def print_course_result(course_name, course_number, prof, grade):
    UNGRADED_SYMBOL = "-"
    if PRINT_UNGRADED or grade != UNGRADED_SYMBOL:
        print grade.ljust(2) + " in " + course_name + " (" + prof + ")"

## get grades - expects the driver to be at the SIS home page with the grades
##              of interest showing
def get_grades(driver):
    grades_table = driver.find_elements(By.TAG_NAME, "table")[9]
    courses = grades_table.find_elements(By.TAG_NAME, "tr")
    for course in courses:
        details = course.find_elements(By.TAG_NAME, "td")

        # makes sure it's a grade row
        if len(details) != 6:
            continue

        course_name   = details[0].text
        course_number = details[1].text
        prof          = details[2].text
        grade         = details[3].text
        is_graded     = details[4].text == "Graded"

        # only print graded courses
        if not is_graded:
            continue

        print_course_result(course_name, course_number, prof, grade)

# waits for element to appear
def wait_for_element(elem):
    try:
        WebDriverWait(driver, DELAY).until(EC.presence_of_element_located(elem))
    except TimeoutException:
        print "Timeout"
        sys.exit(1)

################################################################################
################################################################################

if __name__ == "__main__":

    USER=SIS_USERID.upper() # SIS doesn't work with lowercase logins
    PASS=raw_input()

    ## Initialize and load the web page
    driver = webdriver.PhantomJS(executable_path=PHANTOMJS_BINARY,
                                 service_log_path=os.path.devnull)
    # driver = webdriver.Firefox()

    driver.get(LOGIN_URL)
    wait_for_element((By.NAME, 'userid'))

    login(driver)

    # after logged in, go to sis grades url
    driver.get(SIS_URL)
    wait_for_element((By.ID, 'tfp_grades_lft_arrow'))

    # go back to this past semester's grades (default is next semester)
    elem = driver.find_element_by_id('tfp_grades_lft_arrow')
    elem.click()
    time.sleep(0.5)

    get_grades(driver)

    driver.close()
    driver.quit()
